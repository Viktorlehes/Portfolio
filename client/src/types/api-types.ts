/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/user/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Login User
         * @description User login endpoint
         */
        post: operations["login_user_user_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register User
         * @description User registration endpoint
         */
        post: operations["register_user_user_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Current User
         * @description Get current user profile
         */
        get: operations["get_current_user_user_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/verify-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Verify Email
         * @description Verify user email
         */
        post: operations["verify_email_user_me_verify_email_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Change Password
         * @description Change user password
         */
        post: operations["change_password_user_me_change_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wallet/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Wallets
         * @description Get all wallets for the current user.
         *     Optionally filter by source (zerion, binance, etc.)
         */
        get: operations["get_wallets_wallet__get"];
        put?: never;
        /**
         * Create Wallet
         * @description Create a new wallet for the current user.
         */
        post: operations["create_wallet_wallet__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wallet/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Wallet
         * @description Get a specific wallet by address
         */
        get: operations["get_wallet_wallet__address__get"];
        put?: never;
        post?: never;
        /**
         * Remove Wallet
         * @description Remove (deactivate) a wallet for the current user
         */
        delete: operations["remove_wallet_wallet__address__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wallet/{address}/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh Wallet
         * @description Manually refresh wallet data from source
         */
        post: operations["refresh_wallet_wallet__address__refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wallet/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Update Wallet
         * @description Update a wallet for the current user
         */
        post: operations["update_wallet_wallet_update_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/feargreedindex": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Feargreedindex */
        get: operations["get_feargreedindex_overview_feargreedindex_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/marketstats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Markestats */
        get: operations["get_markestats_overview_marketstats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/scraped-CGLS-data": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Scraped Cgls Data */
        get: operations["get_scraped_CGLS_data_overview_scraped_CGLS_data_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/token_table": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Token Table */
        get: operations["get_token_table_overview_token_table_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/get-default-tokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Default Tokens */
        get: operations["get_default_tokens_overview_get_default_tokens_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/default_categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Default Categories */
        get: operations["get_default_categories_overview_default_categories_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/user_categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User Categories */
        get: operations["get_user_categories_overview_user_categories_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/add-cmc-category": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Cmc Category */
        post: operations["add_cmc_category_overview_add_cmc_category_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/remove-cmc-category": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Remove Cmc Category */
        post: operations["remove_cmc_category_overview_remove_cmc_category_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/add-custom-category": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Custom Category */
        post: operations["add_custom_category_overview_add_custom_category_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/remove-custom-category": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Remove Cmc Category */
        post: operations["remove_cmc_category_overview_remove_custom_category_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/overview/find-tokens-by-name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Find Token By Name */
        post: operations["find_token_by_name_overview_find_tokens_by_name_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/chart/day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Token Chart */
        post: operations["get_token_chart_chart_day_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/alert/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User Alerts */
        get: operations["get_user_alerts_alert__get"];
        put?: never;
        /** Create Alert */
        post: operations["create_alert_alert__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/alert/{alert_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Alert */
        delete: operations["delete_alert_alert__alert_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** APIResponse[Alert] */
        APIResponse_Alert_: {
            data?: components["schemas"]["Alert"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[CoinglassMetrics] */
        APIResponse_CoinglassMetrics_: {
            data?: components["schemas"]["CoinglassMetrics"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[DayChartData] */
        APIResponse_DayChartData_: {
            data?: components["schemas"]["DayChartData"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[FearGreadData] */
        APIResponse_FearGreadData_: {
            data?: components["schemas"]["FearGreadData"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[List[Alert]] */
        APIResponse_List_Alert__: {
            /** Data */
            data?: components["schemas"]["Alert"][] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[List[DefaultCategory]] */
        APIResponse_List_DefaultCategory__: {
            /** Data */
            data?: components["schemas"]["DefaultCategory"][] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[List[UnifiedToken]] */
        APIResponse_List_UnifiedToken__: {
            /** Data */
            data?: components["schemas"]["UnifiedToken"][] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[List[UnifiedWallet]] */
        APIResponse_List_UnifiedWallet__: {
            /** Data */
            data?: components["schemas"]["UnifiedWallet"][] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[LoginUserResponse] */
        APIResponse_LoginUserResponse_: {
            data?: components["schemas"]["LoginUserResponse"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[MarketStats] */
        APIResponse_MarketStats_: {
            data?: components["schemas"]["MarketStats"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[UnifiedWallet] */
        APIResponse_UnifiedWallet_: {
            data?: components["schemas"]["UnifiedWallet"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[Union[List[UnifiedToken], NoneType]] */
        APIResponse_Union_List_UnifiedToken___NoneType__: {
            /** Data */
            data?: components["schemas"]["UnifiedToken"][] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[Union[UserCategories, NoneType]] */
        APIResponse_Union_UserCategories__NoneType__: {
            data?: components["schemas"]["UserCategories"] | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** APIResponse[bool] */
        APIResponse_bool_: {
            /** Data */
            data?: boolean | null;
            /**
             * Success
             * @default true
             */
            success: boolean;
            /** Error */
            error?: string | null;
            /**
             * Status Code
             * @default 200
             */
            status_code: number;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
        };
        /** Alert */
        Alert: {
            /** Cmc Id */
            cmc_id: number;
            /** Symbol */
            symbol: string;
            /** Name */
            name: string;
            /** Telegram Chat Id */
            telegram_chat_id: string;
            /** Upper Target Price */
            upper_target_price?: number | null;
            /** Lower Target Price */
            lower_target_price?: number | null;
            /** Percent Change Threshold */
            percent_change_threshold?: number | null;
            /** Base Price */
            base_price?: number | null;
            /** Last Checked Price */
            last_checked_price?: number | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at?: string;
            /** Id */
            id: string;
        };
        /** Attributes */
        Attributes: {
            /**
             * Begin At
             * Format: date-time
             */
            begin_at: string;
            /**
             * End At
             * Format: date-time
             */
            end_at: string;
            stats: components["schemas"]["Stats"];
            /** Points */
            points: [
                number,
                number
            ][];
        };
        /** CoinglassMetrics */
        CoinglassMetrics: {
            open_interest: components["schemas"]["MetricItem"];
            futures_volume: components["schemas"]["MetricItem"];
            liquidations_24h: components["schemas"]["MetricItem"];
            total_options_open_interest: components["schemas"]["MetricItem"];
            btc_long_short_ratio: components["schemas"]["MetricItem"];
            btc_dominance: components["schemas"]["MetricItem"];
        };
        /** CreateAlertRequest */
        CreateAlertRequest: {
            /** Id */
            id: number;
            /** Symbol */
            symbol: string;
            /** Name */
            name: string;
            /** Upper Target Price */
            upper_target_price?: number | null;
            /** Lower Target Price */
            lower_target_price?: number | null;
            /** Percent Change Threshold */
            percent_change_threshold?: number | null;
            /** Base Price */
            base_price?: number | null;
        };
        /**
         * CreateWalletRequest
         * @description Request model for creating a new wallet
         */
        CreateWalletRequest: {
            /**
             * Address
             * @description Wallet address
             */
            address: string;
            /**
             * Name
             * @description Display name for the wallet
             */
            name: string;
            /**
             * Color
             * @description Color code for UI display
             */
            color: string;
            /**
             * Risk Level
             * @description Risk level of wallet
             */
            risk_level: string;
        };
        /** CustomCategory */
        CustomCategory: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Market Cap */
            market_cap: number;
            /** Volume */
            volume: number;
            /** Volume Change */
            volume_change: number;
            /** Avg Price Change */
            avg_price_change: number;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
            /** Tokens */
            tokens: number[];
            /** Owner Id */
            owner_id: string;
        };
        /** Data */
        Data: {
            /** Type */
            type: string;
            /** Id */
            id: string;
            attributes: components["schemas"]["Attributes"];
        };
        /** DayChartData */
        DayChartData: {
            links: components["schemas"]["Links"];
            data: components["schemas"]["Data"];
        };
        /** DefaultCategory */
        DefaultCategory: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Market Cap */
            market_cap: number;
            /** Volume */
            volume: number;
            /** Volume Change */
            volume_change: number;
            /** Avg Price Change */
            avg_price_change: number;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
            /** Title */
            title: string;
            /** Description */
            description: string;
            /** Market Cap Change */
            market_cap_change: number;
            /** Num Tokens */
            num_tokens: number;
        };
        /**
         * DefiPosition
         * @description Standardized Position model combining data from all sources
         */
        DefiPosition: {
            /**
             * Id
             * @description Unique identifier
             */
            id: string;
            /** Name */
            name: string;
            /** Symbol */
            symbol: string;
            /** Position Name */
            position_name: string;
            /** Protocol */
            protocol: string;
            /** Chain */
            chain: string;
            /** Position Type */
            position_type: string;
            /** Cmc Id */
            cmc_id: number | null;
            /** Zerion Id */
            zerion_id: string | null;
            /** Coingecko Id */
            coingecko_id: string | null;
            /** Implementatioxns */
            implementatioxns: components["schemas"]["TokenImplementation"][];
            price_data: components["schemas"]["PositionPriceData"];
            quantity: components["schemas"]["PositionQuantityData"];
            /** Icon */
            icon: string | null;
            /** Protocol Id */
            protocol_id: string | null;
            /** Protocol Link */
            protocol_link: string | null;
            /** Protocol Icon */
            protocol_icon: string | null;
            /** Protocol Chain */
            protocol_chain: string | null;
            /** Dapp */
            dapp: string | null;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** ExternalLinks */
        ExternalLinks: {
            /** Type */
            type: string;
            /** Name */
            name: string;
            /** Url */
            url: string;
        };
        /** FearGreadData */
        FearGreadData: {
            /** Value */
            value: number;
            /**
             * Update Time
             * Format: date-time
             */
            update_time: string;
            /** Value Classification */
            value_classification: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Links */
        Links: {
            /** Self */
            self: string;
        };
        /** LoginUserRequest */
        LoginUserRequest: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** LoginUserResponse */
        LoginUserResponse: {
            /** Access Token */
            access_token: string;
            /**
             * Token Type
             * @default bearer
             */
            token_type: string;
        };
        /** MarketStats */
        MarketStats: {
            /** Active Cryptocurrencies */
            active_cryptocurrencies: number;
            /** Total Cryptocurrencies */
            total_cryptocurrencies: number;
            /** Active Market Pairs */
            active_market_pairs: number;
            /** Active Exchanges */
            active_exchanges: number;
            /** Total Exchanges */
            total_exchanges: number;
            /** Eth Dominance */
            eth_dominance: number;
            /** Btc Dominance */
            btc_dominance: number;
            /** Eth Dominance Yesterday */
            eth_dominance_yesterday: number;
            /** Btc Dominance Yesterday */
            btc_dominance_yesterday: number;
            /** Eth Dominance 24H Percentage Change */
            eth_dominance_24h_percentage_change: number;
            /** Btc Dominance 24H Percentage Change */
            btc_dominance_24h_percentage_change: number;
            /** Defi Volume 24H */
            defi_volume_24h: number;
            /** Defi Volume 24H Reported */
            defi_volume_24h_reported: number;
            /** Defi Market Cap */
            defi_market_cap: number;
            /** Defi 24H Percentage Change */
            defi_24h_percentage_change: number;
            /** Stablecoin Volume 24H */
            stablecoin_volume_24h: number;
            /** Stablecoin Volume 24H Reported */
            stablecoin_volume_24h_reported: number;
            /** Stablecoin Market Cap */
            stablecoin_market_cap: number;
            /** Stablecoin 24H Percentage Change */
            stablecoin_24h_percentage_change: number;
            /** Derivatives Volume 24H */
            derivatives_volume_24h: number;
            /** Derivatives Volume 24H Reported */
            derivatives_volume_24h_reported: number;
            /** Derivatives 24H Percentage Change */
            derivatives_24h_percentage_change: number;
            /** Quote */
            quote: {
                [key: string]: components["schemas"]["USDQuote"];
            };
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
        };
        /** MetricItem */
        MetricItem: {
            /** Text */
            text: string;
            /** Change */
            change: string;
            /** Value */
            value: string;
            /** Sub Text */
            sub_text?: string | null;
        };
        /**
         * PositionPriceData
         * @description Unified price data from multiple sources
         */
        PositionPriceData: {
            /** Current Value */
            current_value: number;
            /** Current Price */
            current_price: number;
            /** Price Change 24H */
            price_change_24h: number | null;
            /** Percent Change 24H */
            percent_change_24h: number;
        };
        /**
         * PositionQuantityData
         * @description Position Quantity Data
         */
        PositionQuantityData: {
            /** Int */
            int: string;
            /** Decimals */
            decimals: number;
            /** Float */
            float: number;
            /** Numeric */
            numeric: string;
        };
        /** RegisterUserRequest */
        RegisterUserRequest: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** Stats */
        Stats: {
            /** First */
            first: number;
            /** Min */
            min: number;
            /** Avg */
            avg: number;
            /** Max */
            max: number;
            /** Last */
            last: number;
        };
        /** Tags */
        Tags: {
            /** Slug */
            slug: string;
            /** Name */
            name: string;
            /** Category */
            category: string;
        };
        /**
         * TokenImplementation
         * @description Chain-specific token implementation details
         */
        TokenImplementation: {
            /** Chain Id */
            chain_id: string;
            /** Address */
            address: string | null;
            /** Decimals */
            decimals: number;
        };
        /**
         * TokenNetFlow
         * @description Exchange flow data from Coinglass
         */
        TokenNetFlow: {
            /**
             * Net Flow 1H
             * @default 0
             */
            net_flow_1h: number;
            /**
             * Net Flow 4H
             * @default 0
             */
            net_flow_4h: number;
            /**
             * Net Flow 12H
             * @default 0
             */
            net_flow_12h: number;
            /**
             * Net Flow 24H
             * @default 0
             */
            net_flow_24h: number;
            /**
             * Net Flow 1W
             * @default 0
             */
            net_flow_1w: number;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
        };
        /**
         * TokenPrice
         * @description Price data from cmc
         */
        TokenPrice: {
            /** Price */
            price: number;
            /** Volume 24H */
            volume_24h: number;
            /** Volume Change 24H */
            volume_change_24h: number;
            /** Percent Change 1H */
            percent_change_1h: number;
            /** Percent Change 24H */
            percent_change_24h: number;
            /** Percent Change 7D */
            percent_change_7d: number;
            /** Percent Change 30D */
            percent_change_30d: number;
            /** Percent Change 60D */
            percent_change_60d: number;
            /** Percent Change 90D */
            percent_change_90d: number;
            /** Market Cap */
            market_cap: number;
            /** Market Cap Dominance */
            market_cap_dominance: number;
            /** Fully Diluted Market Cap */
            fully_diluted_market_cap: number;
            /** Tvl */
            tvl: number | null;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
        };
        /** USDQuote */
        USDQuote: {
            /** Total Market Cap */
            total_market_cap: number;
            /** Total Volume 24H */
            total_volume_24h: number;
            /** Total Volume 24H Reported */
            total_volume_24h_reported: number;
            /** Altcoin Volume 24H */
            altcoin_volume_24h: number;
            /** Altcoin Volume 24H Reported */
            altcoin_volume_24h_reported: number;
            /** Altcoin Market Cap */
            altcoin_market_cap: number;
            /** Defi Volume 24H */
            defi_volume_24h: number;
            /** Defi Volume 24H Reported */
            defi_volume_24h_reported: number;
            /** Defi 24H Percentage Change */
            defi_24h_percentage_change: number;
            /** Defi Market Cap */
            defi_market_cap: number;
            /** Stablecoin Volume 24H */
            stablecoin_volume_24h: number;
            /** Stablecoin Volume 24H Reported */
            stablecoin_volume_24h_reported: number;
            /** Stablecoin 24H Percentage Change */
            stablecoin_24h_percentage_change: number;
            /** Stablecoin Market Cap */
            stablecoin_market_cap: number;
            /** Derivatives Volume 24H */
            derivatives_volume_24h: number;
            /** Derivatives Volume 24H Reported */
            derivatives_volume_24h_reported: number;
            /** Derivatives 24H Percentage Change */
            derivatives_24h_percentage_change: number;
            /** Total Market Cap Yesterday */
            total_market_cap_yesterday: number;
            /** Total Volume 24H Yesterday */
            total_volume_24h_yesterday: number;
            /** Total Market Cap Yesterday Percentage Change */
            total_market_cap_yesterday_percentage_change: number;
            /** Total Volume 24H Yesterday Percentage Change */
            total_volume_24h_yesterday_percentage_change: number;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
        };
        /**
         * UnifiedToken
         * @description Standardized token model combining data from all sources
         */
        UnifiedToken: {
            /**
             * Id
             * @description Unique identifier
             */
            id: string;
            /** Name */
            name: string;
            /** Symbol */
            symbol: string;
            /** Slug */
            slug: string;
            /** Cmc Id */
            cmc_id: number;
            /** Cg Id */
            cg_id?: string | null;
            /** Zerion Id */
            zerion_id?: string | null;
            /** Implementations */
            implementations?: components["schemas"]["TokenImplementation"][] | null;
            /** Total Supply */
            total_supply?: number | null;
            /** Circulating Supply */
            circulating_supply?: number | null;
            /** Max Supply */
            max_supply?: number | null;
            price_data: components["schemas"]["TokenPrice"];
            net_flow_data?: components["schemas"]["TokenNetFlow"] | null;
            /**
             * Tags
             * @default []
             */
            tags: components["schemas"]["Tags"][] | null;
            /** Description */
            description?: string | null;
            /** Logo Url */
            logo_url?: string | null;
            /** External Links */
            external_links?: components["schemas"]["ExternalLinks"][] | null;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /** Rank */
            rank?: number | null;
            /** Zerion Last Updated */
            zerion_last_updated?: string | null;
            /**
             * Last Active
             * Format: date-time
             */
            last_active: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * UnifiedWallet
         * @description Standardized wallet model supporting multiple sources
         */
        UnifiedWallet: {
            /** Id */
            id: string;
            /** User Id */
            user_id: string;
            /** Name */
            name: string;
            /** Color */
            color: string;
            /**
             * Risk Level
             * @default Default
             */
            risk_level: string;
            source: components["schemas"]["WalletSource"];
            /** Address */
            address: string | null;
            /**
             * Tokens
             * @default []
             */
            tokens: components["schemas"]["WalletToken"][];
            /**
             * Defi Positions
             * @default []
             */
            defi_positions: components["schemas"]["DefiPosition"][];
            /**
             * Total Value Usd
             * @default 0
             */
            total_value_usd: number;
            /** Total Value Assets */
            total_value_assets: number | null;
            /** Total Value Defi */
            total_value_defi: number | null;
            /**
             * Metadata
             * @default {}
             */
            metadata: Record<string, never>;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * UpdateWalletRequest
         * @description Request model for updating a new wallet
         */
        UpdateWalletRequest: {
            /**
             * Address
             * @description Wallet address
             */
            address: string;
            /**
             * Name
             * @description Display name for the wallet
             */
            name: string;
            /**
             * Color
             * @description Color code for UI display
             */
            color: string;
            /**
             * Risk Level
             * @description Risk level of wallet
             */
            risk_level: string;
        };
        /**
         * User
         * @example {
         *       "email": "user@example.com",
         *       "email_verified": true,
         *       "id": "123e4567-e89b-12d3-a456-426614174000",
         *       "mfa_enabled": false
         *     }
         */
        User: {
            /**  Id */
            _id?: string;
            /** Email */
            email: string;
            /**
             * Email Verified
             * @default false
             */
            email_verified: boolean | null;
            /** Password Hash */
            password_hash: string;
            /**
             * Mfa Enabled
             * @default false
             */
            mfa_enabled: boolean;
            /** Mfa Secret */
            mfa_secret?: string | null;
            /** Password Reset Token */
            password_reset_token?: string | null;
            /** Password Reset Expires */
            password_reset_expires?: string | null;
            /**
             * Failed Login Attempts
             * @default 0
             */
            failed_login_attempts: number | null;
            /** Locked Until */
            locked_until?: string | null;
            settings?: components["schemas"]["UserSettings"];
            /**
             * Created At
             * Format: date-time
             */
            created_at?: string;
            /**
             * Last Login
             * Format: date-time
             */
            last_login?: string;
            /**
             * Last Active
             * Format: date-time
             */
            last_active?: string;
        };
        /** UserCategories */
        UserCategories: {
            /** Default Categories */
            default_categories: components["schemas"]["DefaultCategory"][] | null;
            /** Custom Categories */
            custom_categories: components["schemas"]["CustomCategory"][] | null;
        };
        /**
         * UserSettings
         * @example {
         *       "default_currency": "USD",
         *       "notification_preferences": {},
         *       "theme": "light"
         *     }
         */
        UserSettings: {
            /**
             * Default Currency
             * @default USD
             */
            default_currency: string;
            /**
             * Theme
             * @default light
             */
            theme: string;
            /**
             * Notification Preferences
             * @default {}
             */
            notification_preferences: Record<string, never>;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * WalletSource
         * @enum {string}
         */
        WalletSource: "zerion" | "binance" | "coinbase" | "custom";
        /**
         * WalletToken
         * @description Token position in a wallet
         */
        WalletToken: {
            /** Token Id */
            token_id: string;
            /** Name */
            name: string;
            /** Symbol */
            symbol: string;
            /** Amount */
            amount: number;
            /** Value Usd */
            value_usd: number;
            /** Price Usd */
            price_usd: number;
            /** Price 24H Change */
            price_24h_change: number;
            /** Position Type */
            position_type: string;
            /** Chain */
            chain: string | null;
            /** Icon */
            icon: string | null;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    login_user_user_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginUserRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_LoginUserResponse_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    register_user_user_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterUserRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_LoginUserResponse_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_current_user_user_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    verify_email_user_me_verify_email_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    change_password_user_me_change_password_post: {
        parameters: {
            query: {
                old_password: string;
                new_password: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_wallets_wallet__get: {
        parameters: {
            query?: {
                /** @description Filter by wallet source */
                source?: components["schemas"]["WalletSource"] | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_List_UnifiedWallet__"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_wallet_wallet__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateWalletRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_UnifiedWallet_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_wallet_wallet__address__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_UnifiedWallet_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_wallet_wallet__address__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_wallet_wallet__address__refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_UnifiedWallet_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_wallet_wallet_update_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateWalletRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_feargreedindex_overview_feargreedindex_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_FearGreadData_"];
                };
            };
        };
    };
    get_markestats_overview_marketstats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_MarketStats_"];
                };
            };
        };
    };
    get_scraped_CGLS_data_overview_scraped_CGLS_data_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_CoinglassMetrics_"];
                };
            };
        };
    };
    get_token_table_overview_token_table_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_List_UnifiedToken__"];
                };
            };
        };
    };
    get_default_tokens_overview_get_default_tokens_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_List_UnifiedToken__"];
                };
            };
        };
    };
    get_default_categories_overview_default_categories_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_List_DefaultCategory__"];
                };
            };
        };
    };
    get_user_categories_overview_user_categories_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_Union_UserCategories__NoneType__"];
                };
            };
        };
    };
    add_cmc_category_overview_add_cmc_category_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_cmc_category_overview_remove_cmc_category_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_custom_category_overview_add_custom_category_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    remove_cmc_category_overview_remove_custom_category_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    find_token_by_name_overview_find_tokens_by_name_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_Union_List_UnifiedToken___NoneType__"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_token_chart_chart_day_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_DayChartData_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_alerts_alert__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_List_Alert__"];
                };
            };
        };
    };
    create_alert_alert__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateAlertRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_Alert_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_alert_alert__alert_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                alert_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIResponse_bool_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
